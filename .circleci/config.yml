# This code is licensed from CircleCI to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.

version: 2.1

orbs:
  perl:
    jobs:
      build:
        description: |
          Builds and test the Perl distribution.
          The
          If there is a
        parameters:
          codecov:
            description: Should we enable code coverage reporting and upload reports to https://codecov.io/ ?
            type: boolean
            default: false
          perl-version:
            description: The Perl version we want to do the build and test with
            type: string
            default: "5.30"
          save-to-artifacts:
            description: Should the resulting build be saved to the artifacts for this pipeline?
            type: boolean
            default: false
          save-to-workspace:
            description: Should the resulting build be stored in the CircleCI workspace for this pipeline so that other jobs in the pipeline can test it?
            type: boolean
            default: false
        docker:
          - image: perldocker/perl-tester:<< parameters.perl-version >>
        steps:
          - checkout
          - run:
              name: Build and Test Distribution
              command: /usr/local/bin/auto-build-and-test-dist
          - when:
              condition: << parameters.save-to-artifacts >>
              steps:
                - run:
                    name: Make tarball
                    command: tar -cvzf build.tar.gz build_dir
                - store_artifacts:
                    path: build.tar.gz
          - when:
              condition: << parameters.save-to-workspace >>
              steps:
                - persist_to_workspace:
                    root: .
                    paths: build_dir
          - when:
              condition: << parameters.codecov >>
              steps:
                - run:
                    name: Run code coverage report and upload to codecov.io
                    command: |
                      cpanm -n Dist::Zilla::App::Command::cover
                      dzil cover --report codecov
          # this bit is experimental, please ignore
          # it will go away soon when we move this logic into
          - run:
              name: Return tests with yath to get proper code reports
              command: |
                cpanm -n Test2::Harness::Renderer::JUnit
                cd build_dir
                mkdir -p /tmp/test-output/perl
                JUNIT_TEST_FILE="/tmp/test-output/perl/results.xml" ALLOW_PASSING_TODOS=1 yath test --renderer=Formatter --renderer=JUnit t
          - store_test_results:
              path: /tmp/test-output

      test-linux:
        description:
          Rerun tests from a previous build cached in the workspace on a specific version of Perl running on Linux.
          In order for this job to succeed the distribution to test must have been stored in the build_dir inside the workspace, which can be easily achieved with the build job by setting its save-to-workspace parameters to true
        parameters:
          perl-version:
            description: The Perl version we want to test with
            type: string
            default: "5.30"
        docker:
          - image: perldocker/perl-tester:<< parameters.perl-version >>
        steps:
          - attach_workspace:
              at: /tmp/workspace
          - run:
              name: Install dependencies
              command: |
                cd /tmp/workspace/build_dir
                cpm install -g \
                --cpanfile cpanfile \
                --with-develop \
                --with-suggests \
                --show-build-log-on-failure
          - run:
              name: Run Tests
              command: |
                cd /tmp/workspace/build_dir
                prove -lr --jobs 2 t xt
    example:
      build-on-all:
        description: >
          This example builds and tests the distribution, then retests the
          resulting build on all the different versions of Perl.
        usage:
          workflows:
            main:
              jobs:
                - perl/build:
                    # run code coverage reports and upload them to https://codecov.io/
                    codecov: true
                    # save a copy of the build so that it can be run following jobs
                    save-to-workspace: true
                    # save a copy of the build as an artifact for later examination
                    save-to-artifacts: true
                - perl/test-linux:
                    requires: [perl/build]
                    matrix:
                      parameters:
                        perl-version:
                          - "5.10"
                          - "5.12"
                          - "5.14"
                          - "5.16"
                          - "5.18"
                          - "5.20"
                          - "5.22"
                          - "5.24"
                          - "5.26"
                          - "5.28"
                          - "5.30"

workflows:
  main:
    jobs:
      - perl/build:
          { save-to-artifacts: true, save-to-workspace: true, codecov: true }
